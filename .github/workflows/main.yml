name: Ejecutar Script de Shell

on:
  push:
    branches:
      - main

jobs:
  build-app:
    runs-on: self-hosted
    
    steps:
    - name: Checkout of source code
      uses: actions/checkout@v2

    - name: Check versions
      run: bash pre-init.sh
    
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
      
    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        azcliversion: latest
        inlineScript: |
          az account show

    - name: Access Azure Key Vault
      run: |
        keyvault_url=${{ secrets.AZURE_KEYVAULT_URL }}
        client_id=${{ secrets.AZURE_CLIENT_ID }}
        client_secret=${{ secrets.AZURE_CLIENT_SECRET }}
        tenant_id=${{ secrets.AZURE_TENANT_ID }}

        # Your commands to interact with Azure Key Vault using Azure CLI or other tools.
      env:
        KEYVAULT_URL: ${{ secrets.AZURE_KEYVAULT_URL }}
        CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    - name: Fetch Secrets from Azure Key Vault
      run: |
        # Authenticate to Azure Key Vault
        az keyvault secret show --vault-name $AZURE_KEYVAULT_URL --name "avh-app-client-secret" --query "value" --output tsv
      id: fetch_secret

    - name: Set Secrets as Environment Variables
      run: |
        echo "SECRET_VALUE=${{ steps.fetch_secret.outputs.stdout }}" >> $GITHUB_ENV

    - name: Use Secrets in Subsequent Steps
      run: |
        # You can now use $SECRET_VALUE as an environment variable in your subsequent steps.
        # For example
        echo $SECRET_VALUE
      
    - name: config
      run: bash config.sh

    - name: Clean
      run: bash pre-build.sh

    - name: Build and push
      run: bash docker-build-push.sh

    #- name: destroy
    # run: destroy.sh
